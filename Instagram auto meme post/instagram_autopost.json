{
  "name": "instagram autopost",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 60
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -740,
        -20
      ],
      "id": "e90b9fba-59fe-49f0-8a4c-47ce8e18b778",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "url": "<image generate api url>",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "code",
              "value": "={{ $('AI Agent').item.json.output }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "content-type",
              "value": "image/jpeg"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        452,
        -20
      ],
      "id": "aa1f377e-0d32-4ccb-918d-b771ed7dc017",
      "name": "HTTP Request",
      "retryOnFail": true,
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "You are a meme bot with a sarcastic personality. Your task is to generate a single, unique, original, and never-before-used fun meme in a coding-inspired style.\n\nStrict Instructions:\n- The meme must be short — just one witty snippet at a time.\n- Format it like a code block with balanced line lengths (~3–5 words) to keep it visually symmetric.\n- DO NOT use \\n or \\\\n — insert actual line breaks (by pressing Enter).\n- Return only one quote per response.\n- Do not repeat or generate multiple memes in one go.\n- Output must be a **single string** containing one meme only — no arrays, no extra text.\n- use sarcastic humor for meme to make them interesting\n- Write like a code error, comment, or terminal message, but with ironic or cynical humor.\n- make sure meme always small not much big to maintain symmetry of 512 x 512 image size.\n\n✅ Example 1:\n\"npm install perfect life  \n>>> Error: 403 Forbidden.  \nPlease lower your expectations.\"\n✅ Example 2:\n\"npm install purpose  \n>>> Warning: package deprecated.  \nReason: never had one.\"\n\nor  \n\"while(alive) {  \n  keepCoding();  \n  // no exit condition  \n}\"",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -520,
        -20
      ],
      "id": "8f656a1e-3662-44ed-a6bb-eb3d6523c5bd",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "open-mixtral-8x22b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        -492,
        200
      ],
      "id": "6fefddf0-847d-4c17-aa53-6838d5dd145d",
      "name": "Mistral Cloud Chat Model",
      "credentials": {
        "mistralCloudApi": {
          "id": "koEwq27np10tuOD4",
          "name": "Mistral Cloud account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": " <your cloudinary upload URL>",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            },
            {
              "name": "upload_preset",
              "value": "unsigned_uploads"
            }
          ]
        },
        "options": {
          "redirect": {
            "redirect": {}
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        672,
        -20
      ],
      "id": "02236080-ff38-411d-affa-33858f989666",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "output",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -372,
        200
      ],
      "id": "dcca36c3-a9e2-4173-a7e7-ef72c1b7ba24",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a witty social media assistant. Your task is to write an engaging Instagram post caption based on the given content.\n\nGuidelines:\n- Use the post content below to inspire a clever, fun, or thoughtful caption.\n- The caption should be short: 1–2 lines only.\n- Include 2–5 relevant hashtags that relate to the content or its vibe. They don’t need to appear in the caption itself.\n- Output only one string: caption first, followed by hashtags on a new line.\n\nContent:\n{{ $('AI Agent').item.json.output }}\n\nExample:\nWhen life throws bugs,  \nwe catch them all.  \n#codinghumor #buglife #devvibes\n",
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -144,
        -20
      ],
      "id": "80e7aebe-84d4-48f2-8bba-205cb73f38b0",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": "open-mistral-nemo",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatMistralCloud",
      "typeVersion": 1,
      "position": [
        -56,
        200
      ],
      "id": "338845d2-3ee8-41d9-a3d4-adcba9fed711",
      "name": "Mistral Cloud Chat Model1",
      "credentials": {
        "mistralCloudApi": {
          "id": "koEwq27np10tuOD4",
          "name": "Mistral Cloud account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7ee52d66-4779-4359-8be9-a3ec5ab3b20f",
              "name": "caption",
              "value": "={{ $json.text }}",
              "type": "string"
            },
            {
              "id": "06121bbd-f893-4a1c-84c6-a7689630361d",
              "name": "node",
              "value": "<node ID of your Instagram account>",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        232,
        -20
      ],
      "id": "8351835d-7578-4336-805f-122b264aa837",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "imageUrl",
              "value": "={{ $json.secure_url }}"
            },
            {
              "name": "captionText",
              "value": "={{ $('Edit Fields').item.json.caption }}"
            },
            {
              "name": "Node",
              "value": "={{ $('Edit Fields').item.json.node }}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set Image & Caption",
      "type": "n8n-nodes-base.set",
      "typeVersion": 1,
      "position": [
        892,
        -20
      ],
      "id": "6fcdd049-c730-4b4e-84e6-89e11a3a35f8"
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v22.0",
        "node": "={{ $json.Node }}",
        "edge": "media",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "image_url",
                "value": "={{ $json.secure_url }}"
              },
              {
                "name": "caption",
                "value": "={{ $json.captionText }}"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        1112,
        -20
      ],
      "id": "706868cd-3d7f-4fd3-b1c1-9c378c6c9d34",
      "name": "Creating Container ID",
      "retryOnFail": false,
      "alwaysOutputData": false,
      "credentials": {
        "facebookGraphApi": {
          "id": "r7onJe2kZMEIRmT8",
          "name": "Facebook Graph account"
        }
      }
    },
    {
      "parameters": {
        "httpRequestMethod": "POST",
        "graphApiVersion": "v22.0",
        "node": "={{ $('Set Image & Caption').item.json.Node }}",
        "edge": "media_publish",
        "options": {
          "queryParameters": {
            "parameter": [
              {
                "name": "creation_id",
                "value": "={{ $json.id }}"
              },
              {
                "name": "image_url",
                "value": "={{ $('Set Image & Caption').item.json.imageUrl }}"
              },
              {
                "name": "caption",
                "value": "={{ $('Set Image & Caption').item.json.captionText }}"
              }
            ]
          }
        }
      },
      "type": "n8n-nodes-base.facebookGraphApi",
      "typeVersion": 1,
      "position": [
        1332,
        -20
      ],
      "id": "46174b82-bf08-4696-9abe-35e0edab7832",
      "name": "Facebook Graph API1",
      "credentials": {
        "facebookGraphApi": {
          "id": "r7onJe2kZMEIRmT8",
          "name": "Facebook Graph account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Set Image & Caption",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Mistral Cloud Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set Image & Caption": {
      "main": [
        [
          {
            "node": "Creating Container ID",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Creating Container ID": {
      "main": [
        [
          {
            "node": "Facebook Graph API1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Kolkata",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "97cd9b23-0dd9-4d4e-b56e-817070ec5f4d",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "e1b3ddd9def30a19c7001b44ea23f2c82e68f188c94b06e123cb38ab464a8652"
  },
  "id": "F1RkT1vCkPncT0be",
  "tags": []
}